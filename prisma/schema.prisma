// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  MODERATOR
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String
  businesses    Business[] // One user can own multiple businesses
  role          Role           @default(USER)
  isVerified      Boolean  @default(false)  // Email verification status
  emailVerifiedAt DateTime?  // Timestamp when email was verified
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  PasswordReset PasswordReset?
  emailVerification EmailVerification?
}

model Business {
  id        String   @id @default(uuid())
  name      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordReset {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  otp       String      // Store the OTP instead of a token
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model EmailVerification {
  id        String   @id @default(uuid())
  userId    String   @unique
  otp       String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AuthLog {
  id         String   @id @default(uuid())
  userId     String?  // Nullable for failed login attempts
  userEmail  String
  status     String   // success, failed, blocked, etc.
  ip         String
  userAgent  String?
  comments   String?
  timestamp  DateTime @default(now())
}
